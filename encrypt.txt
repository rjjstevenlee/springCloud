1.导入xml

<!-- 密码加密使用 -->
<dependency>
  <groupId>com.github.ulisesbocchio</groupId>
  <artifactId>jasypt-spring-boot-starter</artifactId>
  <version>2.1.1</version>
</dependency>
1
2
3
4
5
6
2.yml导入

jasypt:
  encryptor:
    password: erp
1
2
3
3.生成密钥

@RunWith(SpringRunner.class)
@SpringBootTest(classes = { TbCloudApplication.class })
@Configuration
public class PasswordTester {

	@Autowired
	private StringEncryptor encryptor;

	@Test
	public void tester() {
		System.err.println("sxnhtc-nh_bank-1 --> " + encryptor.encrypt("sxnhtc-nh_bank-1"));
		System.err.println("1 --> " + encryptor.encrypt("1"));
		
	}
}
 
4.yml配置:

password: ENC(ZEtU6okJXwEwzrA0a+TdQ0A4ME+8ehOUpopGSXie6ZQ=)





ssl:


SSL(Secure Sockets Layer 安全套接层),及其继任者传输层安全（Transport Layer Security，TLS）是为网络通信提供安全及数据完整性的一种安全协议。TLS与SSL在传输层对网络连接进行加密。SSL协议位于TCP/IP协议与各种应用层协议之间，为数据通讯提供安全支持。SSL协议可分为两层： SSL记录协议（SSL Record Protocol）：它建立在可靠的传输协议（如TCP）之上，为高层协议提供数据封装、压缩、加密等基本功能的支持。 SSL握手协议（SSL Handshake Protocol）：它建立在SSL记录协议之上，用于在实际的数据传输开始前，通讯双方进行身份认证、协商加密算法、交换加密密钥等。
在基于B/S的WEB应用中，是通过HTTPS来实现SSL的。HTTPS是以安全为目的的HTTP通道，简单讲就是HTTP的安全版，即在HTTP下加入SSL。


在SpringBoot内嵌tomcat的条件下，做SSL配置步骤如下：

1.生成证书
DJK或者JRE的bin目录下有一个keytool.exe，是一个证书管理工具，可以用来自签名的证书，环境变量中配置了JAVA_HOME以及JAVA_HOME的bin目录加入到path后，就可以在控制台调用命令
keytool -genkey -alias tomcat

完成后会在用户目录下（C:\Users\xian.juanjuan）生产一个.kaystore的文件
2.SpringBoot配置SSL
将.keystore文件复制到项目根目录下，然后在application.yml中添加配置


server:
  port: 8082
  ssl:
    key-store: .keystore
    key-store-password: xianjuanjuan
    key-store-type: JKS
    key-alias: tomcat
启动项目
